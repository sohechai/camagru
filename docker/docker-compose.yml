version: '3'

services:
  nginx:
    build:
      context: ./
      dockerfile: ./web/Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./html:/var/www/html
      - ./html/css/:/var/www/html/css
      - ./html/pages/:/var/www/html/pages
    depends_on:
      - php
    networks:
      - app_network

  php:
    build:
      context: ./
      dockerfile: ./php/Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./html:/var/www/html
      - ./html/css/:/var/www/html/css
      - ./html/pages/:/var/www/html/pages
      - ./php:/var/www/html/php
    networks:
      - app_network

  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app_network
  pgadmin:
    image: dpage/pgadmin4
    container_name: docker_pgadmin
    ports:
      - "5050:80"
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  pgdata:
